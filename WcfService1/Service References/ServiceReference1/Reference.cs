//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/WCFHost")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CusomerAddresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CusomerPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CusomerAddres {
            get {
                return this.CusomerAddresField;
            }
            set {
                if ((object.ReferenceEquals(this.CusomerAddresField, value) != true)) {
                    this.CusomerAddresField = value;
                    this.RaisePropertyChanged("CusomerAddres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CusomerPhone {
            get {
                return this.CusomerPhoneField;
            }
            set {
                if ((this.CusomerPhoneField.Equals(value) != true)) {
                    this.CusomerPhoneField = value;
                    this.RaisePropertyChanged("CusomerPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCusomerName", ReplyAction="http://tempuri.org/ICustomerService/GetCusomerNameResponse")]
        string GetCusomerName(string customercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCusomerName", ReplyAction="http://tempuri.org/ICustomerService/GetCusomerNameResponse")]
        System.Threading.Tasks.Task<string> GetCusomerNameAsync(string customercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        WcfService1.ServiceReference1.Customer GetCustomer(WcfService1.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<WcfService1.ServiceReference1.Customer> GetCustomerAsync(WcfService1.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomerList", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomerListResponse")]
        WcfService1.ServiceReference1.Customer[] GetAllCustomerList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomerList", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomerListResponse")]
        System.Threading.Tasks.Task<WcfService1.ServiceReference1.Customer[]> GetAllCustomerListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : WcfService1.ServiceReference1.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<WcfService1.ServiceReference1.ICustomerService>, WcfService1.ServiceReference1.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCusomerName(string customercode) {
            return base.Channel.GetCusomerName(customercode);
        }
        
        public System.Threading.Tasks.Task<string> GetCusomerNameAsync(string customercode) {
            return base.Channel.GetCusomerNameAsync(customercode);
        }
        
        public WcfService1.ServiceReference1.Customer GetCustomer(WcfService1.ServiceReference1.Customer customer) {
            return base.Channel.GetCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<WcfService1.ServiceReference1.Customer> GetCustomerAsync(WcfService1.ServiceReference1.Customer customer) {
            return base.Channel.GetCustomerAsync(customer);
        }
        
        public WcfService1.ServiceReference1.Customer[] GetAllCustomerList() {
            return base.Channel.GetAllCustomerList();
        }
        
        public System.Threading.Tasks.Task<WcfService1.ServiceReference1.Customer[]> GetAllCustomerListAsync() {
            return base.Channel.GetAllCustomerListAsync();
        }
    }
}
